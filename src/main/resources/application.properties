spring.application.name=twspring2

#github oauth
spring.security.oauth2.client.registration.github.client-id=Ov23liU36iWFQ7zkLEpW
spring.security.oauth2.client.registration.github.client-secret=a19ff2d5771818876508d804d4c8703e7f3b4350
spring.security.oauth2.client.registration.github.scope=read:user,user:email
spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user
spring.security.oauth2.client.provider.github.user-name-attribute=id

#google oauth
spring.security.oauth2.client.registration.google.client-id=48449548709-annnaostj1kcaqgot4hotulm5ee57hfq.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.client-name=twspring2

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://openidconnect.googleapis.com/v1/userinfo

#logging
logging.level.org.springframework.security=DEBUG
logging.level.root=INFO

#database
spring.first-datasource.url=jdbc:postgresql://localhost:5432/users_database
spring.first-datasource.username=postgres
spring.first-datasource.password=1q2w3e

spring.second-datasource.url=jdbc:postgresql://localhost:5432/albums_database
spring.second-datasource.username=postgres
spring.second-datasource.password=1q2w3e

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#thymeleaf
spring.thymeleaf.template-loader-path: classpath:/templates
spring.thymeleaf.suffix: .html
spring.thymeleaf.cache: false

spring.messages.basename=validation